#!/bin/bash

# Dependencies directory
dir_3dsfiles=~/3DS/files

# NATIVE_FIRM urls
n3ds_firm=http://nus.cdn.c.shop.nintendowifi.net/ccs/download/0004013820000002/0000001B
n3ds_cetk=http://nus.cdn.c.shop.nintendowifi.net/ccs/download/0004013820000002/cetk
o3ds_firm=http://nus.cdn.c.shop.nintendowifi.net/ccs/download/0004013800000002/00000049
o3ds_cetk=http://nus.cdn.c.shop.nintendowifi.net/ccs/download/0004013800000002/cetk

# BootNTR url
ntr=https://github.com/44670/BootNTR/releases/download/3.2/NTR.3.2.zip

# Directories
dir_build=~/src/build
dir_out=~/src/out
dir_3ds=~/src/out/3ds
dir_cia=~/src/out/3ds/sys/cia
dir_bin=~/src/out/3ds/sys/bin

# Make directories
mkdir -vp $dir_build
mkdir -vp $dir_out
mkdir -vp $dir_3ds
mkdir -vp $dir_cia/apps
mkdir -vp $dir_cia/games
mkdir -vp $dir_cia/updates
mkdir -vp $dir_bin

cp -v $dir_3dsfiles/slot* $dir_bin/;

# Fetch the homebrew from github
echo "Fetching homebrew...";
cd $dir_build;

git clone --recursive https://github.com/d0k3/EmuNAND9.git
git clone --recursive https://github.com/d0k3/Decrypt9WIP.git
git clone --recursive https://github.com/mid-kid/CakesForeveryWan.git
git clone --recursive https://github.com/delebile/arm9loaderhax.git
git clone --recursive https://github.com/44670/BootNTR.git
git clone --recursive -b a9lh https://github.com/Cpasjuste/CtrBootManager.git

# Patch and build the homebrew

# Decrypt9WIP
cd $dir_build/Decrypt9WIP;
echo "Building Decrypt9WIP...";
sleep 5s;
make clean;
cd $dir_build/Decrypt9WIP/source/decryptor;
sed -i -e 's|"slot0x%02XKeyX.bin"|"/3ds/sys/bin/slot0x%02XKeyX.bin"|g' game.c;
sed -i -e 's|"slot0x05KeyY.bin"|"/3ds/sys/bin/slot0x05KeyY.bin"|g' nand.c
cd $dir_build/Decrypt9WIP;
make;
mv -v $dir_build/Decrypt9WIP/output/Decrypt9WIP.bin $dir_bin/Decrypt9WIP.bin;
echo "Done!";

# EmuNAND9
cd $dir_build/EmuNAND9;
echo "Building EmuNAND9...";
sleep 5s;
make clean;
make;
mv -v $dir_build/EmuNAND9/output/EmuNAND9.bin $dir_bin/EmuNAND9.bin;
echo "Done!";

# CakesFW
cd $dir_build/CakesForeveryWan;
echo "Building CakesForeveryWan...";
sleep 5s;
make clean;
cd $dir_build/CakesForeveryWan/source;
sed -i -e 's|"/cakes"|"/3ds/Cakes/cakes"|g' paths.h;
sed -i -e '7i#define PATH_BIN "/3ds/sys/bin"\' paths.h;
sed -i -e 's|#define PATH_SLOT0X25KEYX "/slot0x25keyX.bin"|#define PATH_SLOT0X25KEYX PATH_BIN "/slot0x25keyX.bin"|g' paths.h;
sed -i -e 's|#define PATH_SLOT0X11KEY96 "/slot0x11key96.bin"|#define PATH_SLOT0X11KEY96 PATH_BIN "/slot0x11key96.bin"|g' paths.h;
cd $dir_build/CakesForeveryWan/CakeBrah/;
sed -i -e 's|filepath ?=|filepath ?= 3ds/Cakes/cakes/|g' Makefile;
cd $dir_build/CakesForeveryWan/CakeHax/;
sed -i -e 's|filepath ?=|filepath ?= 3ds/Cakes/cakes/|g' Makefile;
cd $dir_build/CakesForeveryWan/;
make;
mv -v $dir_build/CakesForeveryWan/out/Cakes.dat $dir_build/CakesForeveryWan/out/cakes/;
cp -v $dir_build/CakesForeveryWan/build/main.bin $dir_build/CakesForeveryWan/out/cakes/arm9loaderhax.bin;
mv -v $dir_build/CakesForeveryWan/out/cakes $dir_build/CakesForeveryWan/out/3ds/Cakes/;
cp -rRv $dir_build/CakesForeveryWan/out/3ds/Cakes $dir_3ds/Cakes-n3ds;
cp -rRv $dir_build/CakesForeveryWan/out/3ds/Cakes $dir_3ds/Cakes-o3ds;
cd $dir_3ds/Cakes-n3ds/cakes;
wget $n3ds_cetk;
wget $n3ds_firm;
cp -v $dir_3dsfiles/firmkey.bin-n3ds $dir_3ds/Cakes-n3ds/cakes/firmkey.bin;
mv -v $dir_3ds/Cakes-n3ds/cakes/000000* $dir_3ds/Cakes-n3ds/cakes/firmware.bin
cd $dir_3ds/Cakes-o3ds/cakes;
wget $o3ds_cetk;
wget $o3ds_firm;
cp -v $dir_3dsfiles/firmkey.bin-o3ds $dir_3ds/Cakes-o3ds/cakes/firmkey.bin;
mv -v $dir_3ds/Cakes-o3ds/cakes/000000* $dir_3ds/Cakes-o3ds/cakes/firmware.bin
echo "Done!"

# Arm9loaderhax n3DS
echo "Building Arm9loaderhax for n3DS..."
sleep 5s;
cd $dir_build/arm9loaderhax;
make clean;
cd $dir_build/arm9loaderhax/payload_stage2/source;
sed -i -e 's|"arm9loaderhax.bin"|"/3ds/sys/bin/arm9loaderhax.bin"|g' main.c
cd $dir_build/arm9loaderhax/data_input;
cp -v $dir_3dsfiles/new3ds10.firm $dir_build/arm9loaderhax/data_input;
cp -v $dir_3dsfiles/new3ds90.firm $dir_build/arm9loaderhax/data_input;
cp -v $dir_3dsfiles/secret_sector.bin $dir_build/arm9loaderhax/data_input;
cp -v $dir_3dsfiles/otp.bin-n3ds $dir_build/arm9loaderhax/data_input/otp.bin;
cd $dir_build/arm9loaderhax/;
make;
mv -v $dir_build/arm9loaderhax/data_output $dir_3ds/arm9loaderhax-n3ds;
make clean;

# Arm9loaderhax o3DS
echo "Building Arm9loaderhax for o3DS..."
sleep 5s;
cd $dir_build/arm9loaderhax;
cd $dir_build/arm9loaderhax/data_input;
rm $dir_build/arm9loaderhax/data_input/*;
make clean;
cp -v $dir_3dsfiles/new3ds10.firm $dir_build/arm9loaderhax/data_input;
cp -v $dir_3dsfiles/new3ds90.firm $dir_build/arm9loaderhax/data_input;
cp -v $dir_3dsfiles/secret_sector.bin $dir_build/arm9loaderhax/data_input;
cp -v $dir_3dsfiles/otp.bin-o3ds $dir_build/arm9loaderhax/data_input/otp.bin;
cd $dir_build/arm9loaderhax/;
make;
mv -v $dir_build/arm9loaderhax/data_output $dir_3ds/arm9loaderhax-o3ds;
echo "Done!"

# Build CtrBootManager for a9lh
echo "Building CtrBootManager for a9lh"
sleep 5s;
cd $dir_build/CtrBootManager/source;
sed -i -e 's|#define CONFIG_PATH "/a9lh.cfg"|#define CONFIG_PATH "/3ds/sys/bin/a9lh.cfg"|g' config.h
sed -i -e 's|"/a9lh.cfg"|"/3ds/sys/bin/a9lh.cfg"|g' config_new.c
cd $dir_build/CtrBootManager;
mkdir build;
cd build;
cmake -DCMAKE_TOOLCHAIN_FILE=../DevkitArm3DS.cmake ../
cd $dir_build/CtrBootManager/build/CMakeFiles/CtrBootManager_a9lh.dir;
sed -i -e 's|--set-section-flags|~/.bin/devkitPro/devkitARM/bin/arm-none-eabi-objcopy --set-section-flags|g' build.make
cd $dir_build/CtrBootManager/build;
cmake --build . --target CtrBootManager_a9lh
cp -v CtrBootManager9.bin $dir_bin/arm9loaderhax.bin;
echo "[general]
timeout = 10
recovery = 2
default = 0

[theme]
bgTop1 = 000000
bgTop2 = 000000
bgBottom = 000000
highlight = 000000
borders = 009900
font1 = 009900
font2 = ff0000
bgImgTop = /3ds/sys/bin/bgTop.bin
bgImgBot = /3ds/sys/bin/bgBot.bin

[entry]
title = Cakes
path =  /3ds/Cakes/cakes/arm9loaderhax.bin
offset = 0
key = -1

[entry]
title = Decrypt9
path =  /3ds/sys/bin/Decrypt9WIP.bin
offset = 0
key = 3

[entry]
title = EmuNAND9
path =  /3ds/sys/bin/EmuNAND9.bin
offset = 0
key = 3

[entry]
title = Uncart
path =  /3ds/sys/bin/Uncart-a9lh.bin
offset = 0
key = 3" > $dir_bin/a9lh.cfg

cp -v $dir_3dsfiles/Uncart-a9lh.bin $dir_bin/;
echo "Done!"

# Build BootNTR and extract ntr.bin
echo "Building BootNTR..."
sleep 5s;
cd $dir_build/BootNTR;
make clean;
cp -v $dir_3dsfiles/makerom $dir_build/BootNTR/lib/ctrcommon/tools/makerom-linux;
chmod u+x $dir_build/BootNTR/lib/ctrcommon/tools/*linux;
make;
cp -v $dir_build/BootNTR/output/BootNTR.cia $dir_cia/apps/;
wget $ntr
unzip *.zip
cp -v $dir_build/BootNTR/ntr.bin $dir_out/;
cp -rRv $dir_3dsfiles/filer $dir_out;
cp -rRv $dir_3dsfiles/plugin $dir_out;
echo "Done!"

# Copy devtools
echo "Copying devtools..."
sleep 5s;
cd $dir_build;
cp -v $dir_3dsfiles/*.cia $dir_cia/apps/;
echo "Done!"

# Copy boot.3dsx
echo "Copying boot.3dsx";
cp -v $dir_3dsfiles/boot.3dsx $dir_out;
echo "Done!"

# Clean up
cd ~/src;
mv -v $dir_out sdmc_root-$(date +%m-%d-%Y);
#rm -rf $dir_build;
exit 0;
