#!/bin/bash
# brew

# N3DS NATIVE_FIRM
n3ds_firm=http://nus.cdn.c.shop.nintendowifi.net/ccs/download/0004013820000002/0000001F
n3ds_cetk=http://nus.cdn.c.shop.nintendowifi.net/ccs/download/0004013820000002/cetk
# O3DS NATIVE_FIRM
o3ds_firm=http://nus.cdn.c.shop.nintendowifi.net/ccs/download/0004013800000002/00000050
o3ds_cetk=http://nus.cdn.c.shop.nintendowifi.net/ccs/download/0004013800000002/cetk

# N3DS TWL_FIRM
n3ds_twl_firm=http://nus.cdn.c.shop.nintendowifi.net/ccs/download/0004013820000102/00000000
n3ds_twl_cetk=http://nus.cdn.c.shop.nintendowifi.net/ccs/download/0004013820000102/cetk
# O3DS TWL_FIRM
o3ds_twl_firm=http://nus.cdn.c.shop.nintendowifi.net/ccs/download/0004013800000102/00000016
o3ds_twl_cetk=http://nus.cdn.c.shop.nintendowifi.net/ccs/download/0004013800000102/cetk

# N3DS AGB_FIRM
n3ds_agb_firm=http://nus.cdn.c.shop.nintendowifi.net/ccs/download/0004013820000202/00000000
n3ds_agb_cetk=http://nus.cdn.c.shop.nintendowifi.net/ccs/download/0004013820000202/cetk
# O3DS AGB_FIRM
o3ds_agb_firm=http://nus.cdn.c.shop.nintendowifi.net/ccs/download/0004013800000202/0000000B
o3ds_agb_cetk=http://nus.cdn.c.shop.nintendowifi.net/ccs/download/0004013800000202/cetk

# Build dependencies
dir_a9lh_files=~/Documents/3ds/a9lh_files
dir_cakesfw_files=~/Documents/3ds/cakesfw_files
dir_cia_files=~/Documents/3ds/cia_files
dir_decrypt9wip_files=~/Documents/3ds/decrypt9wip_files
dir_3ds_injector_files=~/Documents/3ds/3ds_injector_files
dir_slotkeybin_files=~/Documents/3ds/slotkeybin_files
dir_misc_files=~/Documents/3ds/misc_files
dir_filer=~/Documents/3ds/filer

# Define directories
dir_src=~/src
dir_homebrew=~/Documents/3ds/homebrew
dir_firm=$dir_homebrew/firm
dir_twl=$dir_homebrew/twl
dir_agb=$dir_homebrew/agb
dir_build=$dir_src/build
dir_out=$dir_src/out
dir_sys=$dir_out/sys
dir_cia=$dir_sys/cia
dir_bin=$dir_sys/bin
dir_tmp=$dir_sys/tmp

# Brew Menu
echo "";
echo "****** Brew Menu ******"
echo "[1] Build 3DS homebrew";
echo "[2] Update 3DS homebrew";
echo -n "Select your choice: ";
read option;
if [ $option != "1" ] && [ $option != "2" ]; then
    echo "Invalid choice!";
    exit 1;
fi
if [ $option = "2" ]; then 
    # Fetch the homebrew from github
    mkdir -vp $dir_homebrew
    rm -rf $dir_homebrew/*;
    mkdir -vp $dir_firm/n3ds; mkdir -vp $dir_firm/o3ds;
    mkdir -vp $dir_twl/n3ds; mkdir -vp $dir_twl/o3ds;
    mkdir -vp $dir_agb/n3ds; mkdir -vp $dir_agb/o3ds;
    cd $dir_homebrew;
    echo "Fetching homebrew...";
    git clone --recursive https://github.com/d0k3/Decrypt9WIP.git
    git clone --recursive https://github.com/d0k3/EmuNAND9.git
    git clone --recursive https://github.com/d0k3/GodMode9.git
    git clone --recursive https://github.com/AuroraWright/uncart.git
    git clone --recursive https://github.com/mid-kid/CakesForeveryWan.git
    git clone --recursive https://github.com/mid-kid/lgy_cakes.git
    #git clone --recursive https://github.com/mid-kid/3ds_injector.git
    git clone --recursive https://github.com/Wolfvak/3ds_injector.git
    git clone --recursive https://github.com/delebile/arm9loaderhax.git
    git clone --recursive https://github.com/Steveice10/FBI.git
    git clone --recursive https://github.com/3xkrazy/ftpd.git
    git clone --recursive -b a9lh https://github.com/Cpasjuste/CtrBootManager.git
    cd $dir_firm/n3ds; wget $n3ds_firm; wget $n3ds_cetk;
    cd $dir_firm/o3ds; wget $o3ds_firm; wget $o3ds_cetk;
    cd $dir_twl/n3ds; wget $n3ds_twl_firm; wget $n3ds_twl_cetk;
    cd $dir_twl/o3ds; wget $o3ds_twl_firm; wget $o3ds_twl_cetk;
    cd $dir_agb/n3ds; wget $n3ds_agb_firm; wget $n3ds_agb_cetk;
    cd $dir_agb/o3ds; wget $o3ds_agb_firm; wget $o3ds_agb_cetk;
    echo "Homebrew up to date! Exiting...";
    exit 0;
fi

# Clean dir_src
rm -rf $dir_build; rm -rf $dir_out; rm -rf $dir_src/sdmc*;

# Make directories
mkdir -vp $dir_build $dir_out $dir_sys $dir_cia $dir_cia/apps $dir_cia/games $dir_cia/updates $dir_bin $dir_tmp;
cp -rR $dir_homebrew/* $dir_build/;

# Decrypt9WIP
cd $dir_build/Decrypt9WIP;
echo "";
echo "********** Building Decrypt9WIP **********";
make clean;
cd $dir_build/Decrypt9WIP/source/decryptor;
sed -i -e 's|"aeskeydb.bin"|"/sys/bin/aeskeydb.bin"|g' keys.c;
cd $dir_build/Decrypt9WIP;
make bootstrap;
mv -v $dir_build/Decrypt9WIP/output/Decrypt9WIP.bin $dir_bin/decrypt9wip.bin;
cp -v $dir_decrypt9wip_files/aeskeydb.bin $dir_bin/;
echo "Done!";

# EmuNAND9
cd $dir_build/EmuNAND9;
echo "";
echo "********** Building EmuNAND9 **********";
make clean;
cd $dir_build/EmuNAND9/source;
cd $dir_build/EmuNAND9;
make bootstrap;
mv -v $dir_build/EmuNAND9/output/EmuNAND9.bin $dir_bin/emunand9.bin;
echo "Done!";

# Godmode9
cd $dir_build/GodMode9;
echo "";
echo "********** Building GodMode9 **********";
make clean;
make bootstrap;
mv -v $dir_build/GodMode9/output/GodMode9.bin $dir_bin/godmode9.bin;
echo "Done!";

# Uncart
cd $dir_build/uncart;
echo "";
echo "********** Building Uncart **********";
make clean;
make;
mv -v $dir_build/uncart/arm9loaderhax.bin $dir_bin/uncart.bin;
echo "Done!";

# CakesFW for n3ds
cd $dir_build/CakesForeveryWan;
echo "";
echo "********** Building CakesForeveryWan for n3ds **********";
make clean;
cd $dir_build/CakesForeveryWan/source;
sed -i -e 's|"/cakes"|"/sys/cakes-n3ds"|g' paths.h;
sed -i -e 's|PATH_SLOT0X25KEYX|PATH_SLOT0X25KEYX PATH_CAKES|g' paths.h;
sed -i -e 's|PATH_SLOT0X11KEY96|PATH_SLOT0X11KEY96 PATH_CAKES|g' paths.h;
cd $dir_build/CakesForeveryWan/CakeBrah/;
sed -i -e 's|filepath ?=|filepath ?= sys/cakes-n3ds/|g' Makefile;
cd $dir_build/CakesForeveryWan/CakeHax/;
sed -i -e 's|filepath ?=|filepath ?= sys/cakes-n3ds/|g' Makefile;
cd $dir_build/CakesForeveryWan/;
make;
mv -v $dir_build/CakesForeveryWan/out/Cakes.dat $dir_build/CakesForeveryWan/out/cakes/;
mv -v $dir_build/CakesForeveryWan/out/3ds/Cakes/Cakes.3dsx $dir_build/CakesForeveryWan/out/cakes/;
mv -v $dir_build/CakesForeveryWan/out/3ds/Cakes/Cakes.smdh $dir_build/CakesForeveryWan/out/cakes/;
cp -v $dir_build/CakesForeveryWan/build/main.bin $dir_build/CakesForeveryWan/out/cakes/cakes.bin;
cp -v $dir_slotkeybin_files/slot0x25KeyX.bin $dir_build/CakesForeveryWan/out/cakes;
cp -v $dir_slotkeybin_files/slot0x11Key96.bin $dir_build/CakesForeveryWan/out/cakes;
mv -v $dir_build/CakesForeveryWan/out/cakes $dir_sys/cakes-n3ds;
cp -v $dir_firm/n3ds/000000* $dir_sys/cakes-n3ds/firmware.bin;
cp -v $dir_firm/n3ds/cetk $dir_sys/cakes-n3ds/cetk;
cp -v $dir_cakesfw_files/n3ds/firmkey.bin $dir_sys/cakes-n3ds/firmkey.bin;
cp -v $dir_twl/n3ds/000000* $dir_sys/cakes-n3ds/twl_firmware.bin;
cp -v $dir_twl/n3ds/cetk $dir_sys/cakes-n3ds/twl_cetk;
cp -v $dir_cakesfw_files/n3ds/twl_firmkey.bin $dir_sys/cakes-n3ds/twl_firmkey.bin;
cp -v $dir_agb/n3ds/000000* $dir_sys/cakes-n3ds/agb_firmware.bin;
cp -v $dir_agb/n3ds/cetk $dir_sys/cakes-n3ds/agb_cetk;
cp -v $dir_cakesfw_files/n3ds/agb_firmkey.bin $dir_sys/cakes-n3ds/agb_firmkey.bin;
rm -rf $dir_build/CakesForeveryWan; cp -rR $dir_homebrew/CakesForeveryWan $dir_build/;
echo "Done!";

# CakesFW for o3ds
cd $dir_build/CakesForeveryWan;
echo "";
echo "********** Building CakesForeveryWan for o3ds **********";
make clean;
cd $dir_build/CakesForeveryWan/source;
sed -i -e 's|"/cakes"|"/sys/cakes-o3ds"|g' paths.h;
sed -i -e 's|PATH_SLOT0X25KEYX|PATH_SLOT0X25KEYX PATH_CAKES|g' paths.h;
sed -i -e 's|PATH_SLOT0X11KEY96|PATH_SLOT0X11KEY96 PATH_CAKES|g' paths.h;
cd $dir_build/CakesForeveryWan/CakeBrah/;
sed -i -e 's|filepath ?=|filepath ?= sys/cakes-o3ds/|g' Makefile;
cd $dir_build/CakesForeveryWan/CakeHax/;
sed -i -e 's|filepath ?=|filepath ?= sys/cakes-o3ds/|g' Makefile;
cd $dir_build/CakesForeveryWan/;
make;
mv -v $dir_build/CakesForeveryWan/out/Cakes.dat $dir_build/CakesForeveryWan/out/cakes/;
mv -v $dir_build/CakesForeveryWan/out/3ds/Cakes/Cakes.3dsx $dir_build/CakesForeveryWan/out/cakes/;
mv -v $dir_build/CakesForeveryWan/out/3ds/Cakes/Cakes.smdh $dir_build/CakesForeveryWan/out/cakes/;
cp -v $dir_build/CakesForeveryWan/build/main.bin $dir_build/CakesForeveryWan/out/cakes/cakes.bin;
cp -v $dir_slotkeybin_files/slot0x25KeyX.bin $dir_build/CakesForeveryWan/out/cakes;
cp -v $dir_slotkeybin_files/slot0x11Key96.bin $dir_build/CakesForeveryWan/out/cakes;
mv -v $dir_build/CakesForeveryWan/out/cakes $dir_sys/cakes-o3ds;
cp -v $dir_firm/o3ds/000000* $dir_sys/cakes-o3ds/firmware.bin;
cp -v $dir_firm/o3ds/cetk $dir_sys/cakes-o3ds/cetk;
cp -v $dir_cakesfw_files/o3ds/firmkey.bin $dir_sys/cakes-o3ds/firmkey.bin;
cp -v $dir_twl/o3ds/000000* $dir_sys/cakes-o3ds/twl_firmware.bin;
cp -v $dir_twl/o3ds/cetk $dir_sys/cakes-o3ds/twl_cetk;
cp -v $dir_cakesfw_files/o3ds/twl_firmkey.bin $dir_sys/cakes-o3ds/twl_firmkey.bin;
cp -v $dir_agb/o3ds/000000* $dir_sys/cakes-o3ds/agb_firmware.bin;
cp -v $dir_agb/o3ds/cetk $dir_sys/cakes-o3ds/agb_cetk;
cp -v $dir_cakesfw_files/o3ds/agb_firmkey.bin $dir_sys/cakes-o3ds/agb_firmkey.bin;
echo "Done!";

# lgy_cakes
cd $dir_build/lgy_cakes;
echo "";
echo "********** Building lgy_cakes **********"
make clean;
make;
cp -v *.cake $dir_sys/cakes-n3ds/patches/;
cp -v *.cake $dir_sys/cakes-o3ds/patches/;
echo "Done!";

<< COMMENT1
# 3ds_injector
cd $dir_build/3ds_injector;
echo "";
echo "********** Building 3ds_injector **********"
make clean;
make;
cp -v *.cake $dir_sys/cakes-n3ds/patches/;
cp -v *.cake $dir_sys/cakes-o3ds/patches/;
echo "Done!";
COMMENT1

# 3ds_injector for n3ds
cd $dir_build/3ds_injector;
echo "";
echo "********** Building 3ds_injector for n3ds **********"
make clean;
cd $dir_build/3ds_injector/source/;
sed -i -e 's|"/injector/"|"/sys/cakes-n3ds/3ds_injector/"|g' paths.h;
cd $dir_build/3ds_injector;
make;
cp -v *.cake $dir_sys/cakes-n3ds/patches/;
cp -rRv $dir_3ds_injector_files $dir_sys/cakes-n3ds/3ds_injector;
echo "Done!";
rm -rf $dir_build/3ds_injector; cp -rR $dir_homebrew/3ds_injector $dir_build/3ds_injector;

# 3ds_injector for o3ds
cd $dir_build/3ds_injector;
echo "";
echo "********** Building 3ds_injector for o3ds **********"
make clean;
cd $dir_build/3ds_injector/source/;
sed -i -e 's|"/injector/"|"/sys/cakes-o3ds/3ds_injector/"|g' paths.h;
cd $dir_build/3ds_injector;
make;
cp -v *.cake $dir_sys/cakes-o3ds/patches/;
cp -rRv $dir_3ds_injector_files $dir_sys/cakes-o3ds/3ds_injector;
echo "Done!";

# Arm9loaderhax n3ds
cd $dir_build/arm9loaderhax;
echo "";
echo "********** Building Arm9LoaderHax for n3DS **********";
make clean;
cd $dir_build/arm9loaderhax/payload_stage2/source;
sed -i -e 's|"arm9loaderhax.bin"|"/sys/bin/boot.bin"|g' main.c;
cd $dir_build/arm9loaderhax/payload_installer/installer/source;
sed -i -e 's|"sdmc:/arm9loaderhax.pack"|"sdmc:/sys/arm9loaderhax-n3ds/arm9loaderhax.pack"|g' main.c
cd $dir_build/arm9loaderhax/data_input;
cp -v $dir_a9lh_files/new3ds10.firm $dir_build/arm9loaderhax/data_input;
cp -v $dir_a9lh_files/new3ds90.firm $dir_build/arm9loaderhax/data_input;
cp -v $dir_a9lh_files/secret_sector.bin $dir_build/arm9loaderhax/data_input;
cp -v $dir_a9lh_files/otp.bin-n3ds $dir_build/arm9loaderhax/data_input/otp.bin;
cd $dir_build/arm9loaderhax/;
make;
mv -v $dir_build/arm9loaderhax/data_output $dir_sys/arm9loaderhax-n3ds;
rm -rf $dir_build/arm9loaderhax; cp -rR $dir_homebrew/arm9loaderhax $dir_build/;
echo "Done!";

# Arm9loaderhax o3ds
cd $dir_build/arm9loaderhax;
echo "";
echo "********** Building Arm9loaderhax for o3DS **********";
make clean;
cd $dir_build/arm9loaderhax/payload_stage2/source;
sed -i -e 's|"arm9loaderhax.bin"|"/sys/bin/boot.bin"|g' main.c;
cd $dir_build/arm9loaderhax/payload_installer/installer/source;
sed -i -e 's|"sdmc:/arm9loaderhax.pack"|"sdmc:/sys/arm9loaderhax-o3ds/arm9loaderhax.pack"|g' main.c
cd $dir_build/arm9loaderhax/data_input;
cp -v $dir_a9lh_files/new3ds10.firm $dir_build/arm9loaderhax/data_input;
cp -v $dir_a9lh_files/new3ds90.firm $dir_build/arm9loaderhax/data_input;
cp -v $dir_a9lh_files/secret_sector.bin $dir_build/arm9loaderhax/data_input;
cp -v $dir_a9lh_files/otp.bin-o3ds $dir_build/arm9loaderhax/data_input/otp.bin;
cd $dir_build/arm9loaderhax/;
make;
mv -v $dir_build/arm9loaderhax/data_output $dir_sys/arm9loaderhax-o3ds;
echo "Done!";

# FBI
cd $dir_build/FBI;
echo "";
echo "********** Building FBI **********";
make clean;
make;
cp -v $dir_build/FBI/output/FBI.cia $dir_cia/apps/fbi-$(date +%m-%d-%Y).cia;
echo "Done!";

# ftpd
cd $dir_build/ftpd;
echo "";
echo "********** Building ftpd **********";
make clean;
make;
cp -v $dir_build/ftpd/output/ftpd.cia $dir_cia/apps/ftpd-$(date +%m-%d-%Y).cia;
echo "Done!";

# CtrBootManager
echo "";
echo "********** Building CtrBootManager **********";
cd $dir_build/CtrBootManager/source;
sed -i -e 's|#define CONFIG_PATH "/a9lh.cfg"|#define CONFIG_PATH "/sys/bin/boot.cfg"|g' config.h;
cd $dir_build/CtrBootManager;
mkdir build;
cd build;
cmake -DCMAKE_TOOLCHAIN_FILE=../DevkitArm3DS.cmake ../
cd $dir_build/CtrBootManager/build/CMakeFiles/CtrBootManager_a9lh.dir;
sed -i -e 's|--set-section-flags|~/.bin/devkitPro/devkitARM/bin/arm-none-eabi-objcopy --set-section-flags|g' build.make;
cd $dir_build/CtrBootManager/build;
cmake --build . --target CtrBootManager_a9lh
cp -v CtrBootManager9.bin $dir_bin/boot.bin;
echo "[general]
timeout = 10
recovery = 2
default = 0

[theme]
bgTop1 = 000000
bgTop2 = 000000
bgBottom = 000000
highlight = 000000
borders = ffffff
font1 = ffffff
font2 = ff0000
bgImgTop = /sys/bin/bgTop.bin
bgImgBot = /sys/bin/bgBot.bin

[entry]
title = CakesFW
path = /sys/cakes-n3ds/cakes.bin
offset = 0
key = -1

[entry]
title = Decrypt9
path = /sys/bin/decrypt9wip.bin
offset = 0
key = 3

[entry]
title = EmuNAND9
path = /sys/bin/emunand9.bin
offset = 0
key = 3

[entry]
title = GodMode9
path = /sys/bin/godmode9.bin
offset = 0
key = 3

[entry]
title = Uncart
path = /sys/bin/uncart.bin
offset = 0
key = 3

[entry]
title = Arm9LoaderHax
path = /sys/arm9loaderhax-n3ds/arm9loaderhax.bin
offset = 0
key = 3" > $dir_bin/boot.cfg;
echo "Done!";

# Copy files over
cp -v $dir_cia_files/apps/*.cia $dir_cia/apps/;
cp -v $dir_misc_files/boot.3dsx $dir_out;
cp -rR $dir_filer $dir_out/;
mkdir -vp $dir_tmp/db; touch $dir_tmp/db/title.db $dir_tmp/db/import.db;
cp -rR $dir_decrypt9wip_files/n3ds $dir_tmp/hs-n3ds; cp -rR $dir_decrypt9wip_files/o3ds $dir_tmp/hs-o3ds;

# Clean up
cd ~/src;
rm -rf $dir_build;
mv -v $dir_out sdmc_root-$(date +%m-%d-%Y);
exit 0;
